<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <!--配置log4net-->
  <log4net debug="true">
      <appender name="LogFileAppender" type="log4net.Appender.FileAppender">
      <!--定义文件存放位置-->
      <file value="App_Data\log4netfile.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Date" />
      <datePattern value="yyyyMMdd-HH:mm:ss" />
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <footer value="" />
        <!--输出格式-->
        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <conversionPattern value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 出错类：%logger property:[%property{NDC}] - 错误描述：%message%newline" />
      </layout>
    </appender>
    <!--设置txt文件存储日志-->
    <appender name="RollingLogRootFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志的路径-->
      <file value="App_Data\Logs\QSLog_" />
      <!--防止多线程时不能写Log,官方说线程非安全-->
      <!--实际使用时,本地测试正常,部署后有不能写日志的情况-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--是否覆盖，默认是追加true-->
      <appendToFile value="true" />
      <!--文件滚动周期（每日创建新日志文件）-->
      <datePattern value="yyyyMMdd&quot;.txt&quot;" />
      <!--设置无限备份=-1 ，最大备份数为1000-->
      <maxSizeRollBackups value="1000" />
      <maximumFileSize value="10240KB"/>
      <!--名称是否可以更改为false为可以更改 置为true,当前最新日志文件名永远为file节中的名字-->
      <staticLogFileName value="false" />
      <!--文件滚动选项Composite表示根据日期和大小来滚动-->
      <rollingStyle value="Composite" />
	  <filter type="log4net.Filter.LevelRangeFilter">
		<!-- 2015-01-29新增 Only ERROR and FATAL log messages end up in this target, even if child loggers accept lower priority. -->
		<levelMin value="Info" />
	  </filter>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="记录时间：%d{yyyy-MM-dd HH:mm:ss}-线程ID：[%t] 级别：[%-5p] 日志名称：[%c] 错误描述：%m %n异常内容：%exception%n%n" />
      </layout>
    </appender>
    <!--设置发送电子邮件的附着器-->
    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <authentication value="Basic" />
      <to value="to@domain.com" />
      <from value="from@domain.com" />
      <username value="mail@username.com" />
      <password value="password" />
      <subject value="求索网站异常日志记录邮件发送" />
      <smtpHost value="smtp.xxx.com" />
      <bufferSize value="10240KB" />
      <lossy value="true" />
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="Error" />
      </evaluator>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%newline记录时间：%date 线程ID：[%thread] 日志级别：%-5level 日志名称：%logger [%property{NDC}] - 错误出现：%message%newline异常内容：%exception%newline%newline" />
      </layout>
    </appender>
    <!--存储到数据库的操作-->
    <appender name="ADONetAppender" type="log4net.Appender.AdoNetAppender">
      <!--表示是记录100 条到缓冲区，满100条后再写入SQL server-->
      <bufferSize value="1" />
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <connectionString value="Data Source=JOSEPHUS-PC;Initial Catalog=QSDB;Integrated Security=True" />
    <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date,@log_thread, @log_level, @log_logger, @log_message, @log_exception)" />
      <parameter>
          <parameterName value="@log_date" />
      <dbType value="DateTime" />
      <layout type="log4net.Layout.RawTimeStampLayout" /><!--可以认为是记录日志的时间-->
      </parameter>
      <parameter>
        <parameterName value="@log_thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%thread" /><!--记录日志时的线程号-->
        </layout>
      </parameter>
      <parameter>
          <parameterName value="@log_level" />
          <dbType value="String" />
          <size value="50" />
          <layout type="log4net.Layout.PatternLayout">
              <conversionPattern value="%level" /><!--日志级别-->
          </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%logger" /><!--哪个记录器存储的该日志-->
        </layout>
    </parameter>
      <parameter>
        <parameterName value="@log_message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%message" /><!--日志信息-->
        </layout>
    </parameter>
      <parameter>
        <parameterName value="@log_exception" />
        <dbType value="String" />
        <size value="8000" />
        <layout type="log4net.Layout.ExceptionLayout" /><!--异常信息-->
    </parameter>
    </appender>
    <!--off>fatal>Error>Warn>Info>Debug>All-->
    <logger name="SmtpForError" additivity="false">
      <level value="Error" />
      <appender-ref ref="SmtpAppender" />
    </logger>
    <!--不加additivity的情况下会导致生成双份的日志信息-->
    <logger name="Loggering" additivity="false">
        <level value="Debug" />
        <appender-ref ref="RollingLogRootFileAppender" />
        <appender-ref ref="ADONetAppender" />
    </logger>
    <logger name="InforLoggering" additivity="false">
    <level value="Info" />
    <appender-ref ref="RollingLogRootFileAppender" />
    <appender-ref ref="ADONetAppender" />
    </logger>
    <root>
       <level value="Info" />
       <appender-ref ref="RollingLogRootFileAppender" />
       <appender-ref ref="ADONetAppender" />
       <appender-ref ref="SmtpAppender"/>
    </root>
  </log4net>
</configuration>
